name: fresco-deploy

#on:
#  push:
#    tags:
#      - '*'

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: deploy

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: deploy

      - name: Terraform Apply
        if: success()
        id: apply
        run: |
          terraform apply -auto-approve tfplan
          echo 'frontend_bucket_name=$(terraform output -raw frontend_bucket_name)' >> "$GITHUB_OUTPUT"
          echo 'cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)' >> "$GITHUB_OUTPUT"
        working-directory: deploy

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Fetch Terraform Outputs
        run: |
           || echo "No cloudfront_distribution_id found"
        working-directory: deploy


      - name: Deploy to S3
        run: |
          cd deploy
          S3_BUCKET_NAME=$(terraform output -raw frontend_bucket_name)
          echo "Extracted S3 bucket name: $S3_BUCKET_NAME"
          cd ../frontend
          aws s3 sync dist/ s3://$S3_BUCKET_NAME --delete

      - name: Invalidate CloudFront
        run: |
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          echo "Extracted CloudFront Distribution ID: $DISTRIBUTION_ID"
          
          # Invalidate CloudFront
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
